substitutions:
  name: "louder-esp32"
  friendly_name: Louder-ESP32 Media Player
#  max_volume: "0.9"  # If volume exceeds this we reset it to this. Be sure to uncomment the code below "max_volume feature".

esphome:
  name: "${name}"
  name_add_mac_suffix: false
  project:
    name: Sonocotta.Louder ESP32
    version: '1.0'
  comment: "${friendly_name} Louder ESP32 ${pcb_version}"
  includes:
    - louderesp32.h
  platformio_options:
    lib_deps: "Wire"
  on_boot:
    priority: 800
    then:
    ## Set a volume limit just to be safe...
    - media_player.volume_set:
        id: louderesp32
        volume: 20%

esp32:
  board: mhetesp32minikit

### Optional if you want ethernet (then remove all wifi config) ###
#ethernet:
#  type: W5500
#  clk_pin: GPIO18
#  mosi_pin: GPIO23
#  miso_pin: GPIO19
#  cs_pin: GPIO05
#  interrupt_pin: GPIO35
#  reset_pin: GPIO14

# Enable logging
logger:
  level: DEBUG
  
# Enable Home Assistant API
api:

# Allow Over-The-Air updates
ota:
  platform: esphome
  password: !secret esphome_ota_password

wifi:
  ssid: !secret esphome_wifi_ssid
  password: !secret esphome_wifi_password
  ap:
    ssid: "$name Hotspot"
    password: !secret esphome_ap_password

captive_portal:

psram:
  mode: octal
  speed: 80MHz

switch:
  - platform: custom
    lambda: |-
      auto tas5805 = new TAS5805();
      App.register_component(tas5805);
      return {tas5805};
    switches:
      name: "Enable Amp"
      id: amp

i2c:
  sda: GPIO21
  scl: GPIO27
  scan: True
  id: i2c_component

i2s_audio:
  i2s_lrclk_pin: GPIO25
  i2s_bclk_pin: GPIO26

interval:
  - interval: 1min
    then:
      - if:
          condition:
            - switch.is_on: amp
            - for:
                time: 30s
                condition:
                  or:
                    - media_player.is_idle: louderesp32
                    - media_player.is_paused: louderesp32
          then:
            - switch.turn_off: amp

media_player:
  - platform: i2s_audio
    name: $friendly_name
    id: louderesp32
    dac_type: external
    i2s_dout_pin: GPIO22
    mode: stereo
    on_play:
      - switch.turn_on: amp
### max_volume feature - uncomment below to enable
#     on_state:
#       then:
#         - if:
#             condition:
#               lambda: |-
#                 float current_volume = roundf(id(louderesp32).volume * 100) / 100.0;
#                 float max_vol = roundf(${max_volume} * 100) / 100.0;
#                 return current_volume > max_vol;
#             then:
#               - logger.log: "Volume exceeds max volume, resetting to max volume"
#               - media_player.volume_set:
#                   id: louderesp32
#                   volume: ${max_volume}
#               - logger.log: "Volume set to max volume"
